var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.409,1,0.812]],["body/components/AppComponent.html",[0,0.658,1,1.392,2,1.667,3,0.443,4,0.373,5,1.42,6,1.42,7,1.42,8,1.42,9,0.373,10,2.493,11,1.42,12,2.483,13,2.202,14,2.427,15,1.88,16,4.552,17,1.88,18,4.061,19,0.518,20,0.907,21,2.107,22,0.518,23,0.046,24,1.118,25,0.881,26,1.259,27,4.061,28,0.881,29,3.067,30,0.599,31,0.599,32,0.443,33,0.685,34,1.42,35,1.88,36,1.88,37,1.42,38,2.243,39,1.42,40,1.031,41,1.42,42,0.779,43,1.42,44,0.881,45,1.42,46,0.779,47,1.42,48,1.42,49,0.779,50,0.793,51,1.42,52,0.881,53,1.42,54,1.42,55,1.42,56,0.033,57,0.033]],["title/modules/AppModule.html",[58,2.298,59,1.689]],["body/modules/AppModule.html",[1,1.538,3,0.353,4,0.297,9,0.297,13,1.003,23,0.047,30,1.045,31,0.477,32,0.353,33,0.546,42,1.227,44,1.388,46,1.227,49,1.227,52,1.388,56,0.028,57,0.028,59,3.356,60,1.281,61,2.076,62,1.987,63,1.987,64,1.987,65,1.987,66,1.987,67,2.532,68,2.532,69,2.824,70,1.987,71,1.461,72,2.444,73,3.474,74,3.474,75,2.824,76,2.824,77,2.824,78,3.474,79,1.987,80,1.685,81,2.444,82,2.444,83,2.824,84,1.461,85,1.987,86,3.474,87,1.461,88,1.987,89,1.685,90,2.444,91,2.444,92,1.987,93,1.461,94,1.987,95,3.474,96,3.474,97,1.685,98,2.444,99,2.444,100,2.444,101,2.444,102,1.461]],["title/modules/AppRoutingModule.html",[58,2.298,67,1.481]],["body/modules/AppRoutingModule.html",[0,0.686,3,0.483,4,0.406,9,0.406,23,0.047,30,1.034,31,0.651,32,0.483,33,0.746,42,1.089,46,1.089,49,1.089,56,0.035,57,0.035,60,1.749,67,2.249,75,2.713,77,3.488,83,2.713,84,1.995,85,2.713,88,2.713,92,2.713,93,1.995,94,2.713,103,3.338,104,3.338,105,4.291,106,2.834,107,1.37,108,1.995,109,3.338,110,1.995,111,5.006,112,3.338,113,2.959,114,3.338,115,3.338,116,2.713,117,3.338,118,3.338,119,3.338]],["title/guards/AuthGuard.html",[108,1.689,120,1.949]],["body/guards/AuthGuard.html",[3,0.481,4,0.405,9,0.405,14,1.988,19,0.562,22,0.562,23,0.047,28,0.956,30,0.924,31,0.649,32,0.481,33,0.743,40,0.845,56,0.034,57,0.034,102,1.988,107,1.366,108,2.559,121,3.327,122,2.704,123,1.387,124,5.173,125,3.327,126,5,127,4.735,128,5,129,3.327,130,1.078,131,1.078,132,4.282,133,1.078,134,3.849,135,4.282,136,2.559,137,4.735,138,1.758,139,2.294,140,2.294,141,1.988,142,1.54]],["title/injectables/AuthService.html",[138,1.16,143,1.308]],["body/injectables/AuthService.html",[3,0.338,4,0.284,9,0.284,14,1.397,19,0.395,20,0.752,22,0.805,23,0.047,24,0.852,25,0.671,26,0.96,28,1.367,30,0.842,31,0.456,32,0.338,33,0.522,40,1.001,56,0.027,57,0.027,97,1.612,110,2.011,123,1.09,130,1.277,131,1.277,133,1.397,138,1.381,140,1.612,142,1.997,143,1.558,144,1.612,145,1.9,146,2.357,147,3.366,148,4.314,149,2.578,150,3.366,151,1.381,152,2.338,153,4.314,154,3.366,155,3.366,156,3.366,157,1.367,158,2.338,159,3.366,160,0.96,161,2.338,162,2.338,163,3.366,164,2.338,165,3.366,166,1.09,167,1.825,168,2.736,169,3.944,170,1.225,171,2.338,172,1.9,173,1.764,174,2.338,175,2.338,176,2.338,177,2.338,178,3.366,179,2.338,180,2.338,181,2.338,182,1.9,183,2.321,184,2.338,185,1.825,186,2.338,187,0.96,188,2.338,189,2.338,190,2.338,191,1.9,192,2.338,193,4.314,194,1.764,195,3.366,196,3.366,197,2.338,198,2.338]],["title/components/LoginComponent.html",[0,0.409,42,0.718]],["body/components/LoginComponent.html",[0,0.477,1,0.499,2,1.106,3,0.251,4,0.211,5,0.804,6,0.804,7,0.804,8,0.804,9,0.211,11,0.804,12,2.127,13,1.886,15,1.248,17,1.248,19,0.294,20,0.602,22,0.72,23,0.047,25,1.069,26,1.527,28,1.355,30,0.786,31,0.339,32,0.251,33,0.388,34,0.804,35,1.248,36,1.248,37,0.804,38,1.722,39,0.804,40,0.945,41,0.804,42,0.945,43,0.804,44,0.499,45,0.804,46,0.441,47,0.804,48,0.804,49,0.441,50,0.526,51,0.804,52,0.499,53,0.804,54,0.804,55,0.804,56,0.022,57,0.022,87,1.038,102,1.038,107,0.713,113,1.859,116,3.025,123,0.873,130,0.873,131,0.873,133,1.205,136,1.611,142,1.248,143,1.722,146,1.973,149,2.224,151,0.713,157,1.432,160,1.825,166,0.873,167,1.529,170,0.911,173,1.731,183,1.859,185,1.722,187,0.713,191,1.413,199,1.413,200,3.302,201,2.696,202,3.302,203,2.696,204,2.566,205,1.738,206,2.277,207,2.566,208,2.696,209,2.191,210,1.738,211,1.738,212,3.302,213,1.738,214,1.859,215,1.738,216,1.738,217,1.738,218,1.859,219,1.738,220,1.738,221,1.038,222,1.738,223,1.198,224,1.859,225,2.191,226,1.738,227,1.198,228,1.738,229,1.738,230,1.738,231,1.738,232,1.738,233,2.696,234,1.413,235,1.738,236,1.198,237,2.696,238,1.738,239,1.738,240,1.738,241,1.413,242,1.738,243,1.738,244,1.738,245,1.738,246,1.738,247,1.738,248,3.025,249,3.025,250,2.566,251,2.696,252,2.696,253,3.025,254,3.025,255,2.696,256,1.738,257,1.738,258,1.413,259,1.738,260,1.738,261,1.413,262,1.413,263,1.738,264,1.198,265,1.738,266,1.738]],["title/interceptors/MyInterceptorInterceptor.html",[68,1.481,267,2.298]],["body/interceptors/MyInterceptorInterceptor.html",[3,0.481,4,0.405,9,0.405,19,0.562,22,0.562,23,0.046,28,1.23,30,0.924,31,0.649,32,0.481,33,0.743,40,0.845,56,0.034,57,0.034,68,2.244,97,2.294,110,1.988,123,1.387,130,1.078,131,1.078,133,1.078,134,3.849,138,1.758,139,2.294,141,1.988,142,1.54,151,1.944,241,2.704,268,3.327,269,3.849,270,2.704,271,4.282,272,3.327,273,4.282,274,5,275,4.735,276,5,277,3.327,278,3.327,279,4.282,280,3.327,281,3.327,282,3.327,283,3.327,284,3.327]],["title/components/NavbarComponent.html",[0,0.409,44,0.812]],["body/components/NavbarComponent.html",[0,0.476,1,0.497,2,1.104,3,0.25,4,0.211,5,0.802,6,0.802,7,0.802,8,0.802,9,0.211,11,0.802,12,2.125,13,1.884,15,1.244,17,1.244,19,0.293,20,0.6,22,0.719,23,0.047,24,0.98,25,1.155,26,1.651,28,1.467,30,0.831,31,0.338,32,0.25,33,0.387,34,0.802,35,1.244,36,1.244,37,0.802,38,1.719,39,0.802,40,1.08,41,0.802,42,0.44,43,0.802,44,1.067,45,0.802,46,0.44,47,0.802,48,0.802,49,0.44,50,0.785,51,0.802,52,0.497,53,0.802,54,0.802,55,0.802,56,0.022,57,0.022,107,0.711,123,0.871,130,0.561,131,0.561,133,1.487,141,1.607,142,1.719,143,1.525,149,2.22,151,0.711,157,1.384,160,1.747,166,0.871,167,1.525,173,1.727,204,2.562,206,1.854,207,2.272,209,2.679,221,1.035,223,1.194,224,1.194,225,1.408,227,2.562,234,1.408,236,1.854,285,1.408,286,3.295,287,2.688,288,3.295,289,2.688,290,2.272,291,2.272,292,4.256,293,4.256,294,4.256,295,3.714,296,3.714,297,4.256,298,1.732,299,2.679,300,2.688,301,1.727,302,2.688,303,1.732,304,1.732,305,1.732,306,1.732,307,1.732,308,1.732,309,1.732,310,1.732,311,1.732,312,2.688,313,1.732,314,1.732,315,1.732,316,1.732,317,1.408,318,1.408,319,1.732,320,1.732,321,1.732,322,1.732,323,1.732,324,2.185,325,1.732,326,1.732,327,1.408,328,1.408,329,1.732,330,2.688,331,1.408,332,2.688,333,1.408,334,1.732,335,1.732,336,1.732,337,1.732,338,1.732,339,1.732,340,1.732,341,2.185,342,1.408]],["title/components/SingUpComponent.html",[0,0.409,46,0.718]],["body/components/SingUpComponent.html",[0,0.55,1,0.631,2,1.321,3,0.318,4,0.267,5,1.017,6,1.017,7,1.017,8,1.017,9,0.267,11,1.017,12,2.285,13,2.026,15,1.489,17,1.489,19,0.371,20,0.719,22,0.643,23,0.046,28,1.093,30,0.818,31,0.429,32,0.318,33,0.491,34,1.017,35,1.489,36,1.489,37,1.017,38,1.94,39,1.017,40,1.183,41,1.017,42,0.558,43,1.017,44,0.631,45,1.017,46,1.064,47,2.285,48,1.017,49,0.558,50,0.628,51,1.017,52,0.631,53,1.017,54,1.017,55,1.017,56,0.026,57,0.026,87,1.313,93,2.504,107,0.902,113,2.219,123,1.042,130,1.042,131,1.042,133,0.712,143,1.94,151,0.902,157,0.924,160,0.902,170,1.151,182,2.615,206,1.515,207,2.625,214,1.515,223,1.515,249,4.013,250,2.219,253,2.615,254,3.406,264,2.219,317,1.786,343,3.406,344,1.786,345,3.806,346,3.217,347,3.217,348,3.217,349,2.197,350,3.806,351,3.217,352,3.217,353,2.197,354,3.217,355,2.197,356,3.217,357,2.197,358,2.197,359,2.197,360,2.197,361,2.197,362,2.197,363,2.197,364,2.197,365,2.197,366,4.19,367,3.806,368,2.615,369,3.217,370,3.217,371,2.197,372,3.217,373,3.217,374,2.197,375,2.197]],["title/interfaces/Todo.html",[50,0.552,376,1.16]],["body/interfaces/Todo.html",[3,0.506,4,0.426,9,0.426,19,0.591,20,0.987,21,2.357,22,0.888,23,0.046,24,1.767,25,1.005,32,0.506,50,0.863,56,0.036,57,0.036,136,3.324,166,1.57,187,2.09,376,1.436,377,2.09,378,2.843,379,3.512,380,3.512,381,3.043]],["title/interfaces/Todo-1.html",[50,0.462,185,1.096,376,0.972]],["body/interfaces/Todo-1.html",[3,0.547,4,0.46,9,0.46,19,0.639,20,1.037,21,2.424,22,0.849,23,0.045,24,1.831,25,1.086,32,0.547,50,0.906,56,0.037,57,0.037,136,3.001,166,1.627,187,2.149,376,1.553,377,2.26,381,3.129,382,2.26,383,3.075]],["title/components/TodoInputComponent.html",[0,0.409,49,0.718]],["body/components/TodoInputComponent.html",[0,0.454,1,0.461,2,1.041,3,0.232,4,0.195,5,0.744,6,0.744,7,0.744,8,0.744,9,0.195,11,0.744,12,2.071,13,1.935,15,1.173,17,1.173,19,0.272,20,0.566,21,1.453,22,0.778,23,0.047,24,0.586,25,1.184,26,1.693,28,1.405,30,0.757,31,0.314,32,0.232,33,0.359,34,0.744,35,1.173,36,1.173,37,0.744,38,1.65,39,0.744,40,0.985,41,0.744,42,0.408,43,0.744,44,0.461,45,0.744,46,0.408,47,0.744,48,0.744,49,0.905,50,1.056,51,0.744,52,0.461,53,0.744,54,0.744,55,0.744,56,0.02,57,0.02,84,2.965,107,0.659,123,0.821,130,1.017,131,1.017,133,1.257,146,1.876,151,1.041,157,1.354,160,1.89,166,0.821,167,1.65,170,2.034,173,1.646,204,2.459,214,1.748,221,0.96,236,1.748,258,1.306,261,1.306,262,2.552,264,1.748,290,2.165,291,2.165,299,3.352,301,2.263,318,1.306,324,1.306,328,1.306,382,2.965,384,1.306,385,2.061,386,3.14,387,2.535,388,3.565,389,2.535,390,3.565,391,2.535,392,1.607,393,2.535,394,1.607,395,2.535,396,1.607,397,1.607,398,1.607,399,1.607,400,2.535,401,1.607,402,1.607,403,1.607,404,1.607,405,1.607,406,1.607,407,1.306,408,1.607,409,1.607,410,3.14,411,1.607,412,2.535,413,2.535,414,1.607,415,1.607,416,1.607,417,1.607,418,2.535,419,2.061,420,3.14,421,1.607,422,2.535,423,1.607,424,1.607,425,1.607,426,1.607,427,1.607,428,1.607,429,1.607]],["title/components/TodoItemComponent.html",[0,0.409,52,0.812]],["body/components/TodoItemComponent.html",[0,0.516,1,0.565,2,1.217,3,0.285,4,0.24,5,0.911,6,0.911,7,0.911,8,0.911,9,0.24,11,0.911,12,2.213,13,1.962,15,1.373,17,1.373,19,0.333,21,1.373,22,0.72,23,0.047,25,0.565,26,0.808,28,1.286,30,0.696,31,0.384,32,0.285,33,0.44,34,0.911,35,1.373,36,1.373,37,0.911,38,1.838,39,0.911,40,1.081,41,0.911,42,0.5,43,0.911,44,0.565,45,0.911,46,0.5,47,0.911,48,0.911,49,0.5,50,1.031,51,0.911,52,1.14,53,1.651,54,0.911,55,0.911,56,0.024,57,0.024,71,1.176,89,3.203,102,1.176,123,0.96,130,1.155,131,1.155,133,1.286,157,0.565,160,1.748,166,1.584,185,0.911,187,1.464,194,1.032,218,3.297,221,1.176,341,1.6,342,1.6,379,2.045,380,2.045,381,1.772,382,2.776,385,2.41,407,1.6,430,1.6,431,3.567,432,2.965,433,2.965,434,2.965,435,2.965,436,3.97,437,2.965,438,2.965,439,3.567,440,2.965,441,1.969,442,2.9,443,1.969,444,2.965,445,1.969,446,2.965,447,1.969,448,2.965,449,1.969,450,1.969,451,2.965,452,3.567,453,1.969,454,3.567,455,1.969,456,2.965,457,2.965,458,1.969,459,3.567,460,1.969,461,1.969,462,1.969,463,1.969,464,1.969]],["title/injectables/TodoService.html",[138,1.16,301,1.481]],["body/injectables/TodoService.html",[3,0.273,4,0.229,9,0.229,14,1.127,19,0.319,20,0.641,21,1.934,22,0.773,23,0.047,24,1.524,25,1.2,26,1.594,28,1.416,30,0.758,31,0.368,32,0.273,33,0.421,40,0.986,50,0.962,56,0.023,57,0.023,110,2.497,123,0.929,130,1.258,131,1.258,133,1.353,138,1.178,140,1.3,142,2.038,144,1.3,146,2.076,149,2.321,151,1.426,157,1.492,160,1.936,166,1.565,167,1.328,168,1.532,170,2.663,172,1.532,173,1.821,183,1.979,185,1.328,187,0.774,194,1.504,218,2.396,224,1.3,227,2.396,291,3.036,301,1.504,327,1.532,331,1.532,333,1.532,379,1.3,380,1.3,381,1.127,442,2.824,465,1.532,466,3.474,467,3.474,468,3.474,469,2.87,470,2.87,471,2.87,472,2.87,473,2.87,474,2.87,475,1.885,476,1.885,477,1.885,478,1.885,479,2.87,480,1.885,481,2.87,482,1.885,483,1.885,484,1.885,485,1.885,486,1.532,487,1.885,488,1.532,489,2.87,490,3.884,491,1.885,492,1.885,493,1.885,494,2.87,495,1.885,496,1.885,497,1.885,498,1.885,499,1.885,500,1.885,501,2.87,502,2.87,503,1.885,504,1.885,505,1.885,506,2.87,507,1.885]],["title/interfaces/User.html",[157,0.812,376,1.16]],["body/interfaces/User.html",[3,0.502,4,0.423,9,0.423,19,0.587,20,0.983,22,0.886,23,0.046,24,2.026,25,0.998,30,0.678,32,0.502,50,0.991,56,0.035,57,0.035,157,1.264,166,1.565,187,2.085,248,4.13,250,3.504,290,3.504,368,4.13,376,1.426,377,2.076,486,2.824,508,2.824]],["title/coverage.html",[509,3.125]],["body/coverage.html",[0,0.756,1,0.911,9,0.386,10,2.579,22,0.536,23,0.046,42,0.805,44,0.911,46,0.805,49,0.805,50,0.81,52,0.911,56,0.033,57,0.033,68,1.662,84,1.896,89,2.188,93,1.896,108,1.896,120,2.188,122,2.579,138,1.704,143,1.468,145,2.579,157,0.911,167,2.601,194,1.662,199,2.579,267,2.579,269,2.579,270,2.579,285,2.579,301,1.662,343,2.579,344,2.579,376,1.9,378,2.579,382,2.766,383,2.579,384,2.579,430,2.579,465,2.579,508,2.579,509,2.579,510,3.172,511,3.172,512,3.172,513,4.152,514,3.172,515,3.172,516,4.152,517,3.172,518,4.152,519,3.172,520,3.172,521,4.152,522,3.172,523,3.172]],["title/dependencies.html",[61,2.029,524,1.632]],["body/dependencies.html",[23,0.047,31,0.727,56,0.037,57,0.037,61,2.227,76,3.739,79,3.739,80,3.172,87,2.227,107,1.53,139,2.57,488,3.03,525,3.727,526,5.58,527,3.727,528,3.727,529,3.727,530,3.727,531,3.727,532,3.727,533,3.727,534,3.727,535,3.727,536,3.727,537,3.727,538,3.727]],["title/index.html",[19,0.4,539,2.367,540,2.367]],["body/index.html",[0,0.662,4,0.378,23,0.033,40,0.788,56,0.033,57,0.033,71,1.855,141,1.855,194,1.627,419,2.524,524,2.141,541,3.105,542,4.093,543,3.105,544,4.579,545,4.579,546,2.524,547,3.105,548,3.105,549,4.093,550,5.06,551,5.299,552,3.105,553,3.105,554,3.105,555,3.105,556,3.105,557,3.105,558,3.105,559,3.105,560,3.105,561,3.105,562,3.105,563,4.579,564,4.579,565,3.105,566,4.869,567,3.105,568,3.105,569,3.105,570,3.105,571,4.093,572,4.093,573,4.869,574,3.105,575,4.093,576,4.093,577,3.105,578,5.197,579,3.105,580,3.105,581,3.105,582,4.093,583,3.105,584,3.105,585,3.105,586,3.105,587,3.105,588,4.579,589,3.105,590,3.105,591,3.105,592,2.141,593,3.105,594,3.105]],["title/modules.html",[60,2.014]],["body/modules.html",[23,0.04,56,0.04,57,0.04,59,2.575,60,2.258,67,2.258,80,2.971,595,4.308,596,4.308,597,5.018,598,4.308,599,4.308]],["title/overview.html",[592,2.651]],["body/overview.html",[1,1.547,2,1.366,23,0.045,42,1.202,44,1.36,46,1.202,49,1.202,52,1.36,56,0.034,57,0.034,59,3.443,60,1.744,61,2.559,62,2.704,63,2.704,64,2.704,65,2.704,66,2.704,67,2.482,68,2.482,69,3.481,70,2.704,71,1.988,106,1.988,120,2.294,144,2.294,185,1.54,377,1.988,592,2.294,600,4.282,601,3.327,602,3.327,603,3.327]],["title/properties.html",[20,0.758,524,1.632]],["body/properties.html",[20,0.987,23,0.043,56,0.041,57,0.041,546,3.593,604,4.42]],["title/routes.html",[106,2.297]],["body/routes.html",[23,0.041,56,0.041,57,0.041,106,2.676]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":604,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":462,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["0.5",{"_index":460,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["0/10",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":185,"title":{"interfaces/Todo-1.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"overview.html":{}}}],["1.1.19",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["1.10.3",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["10vw",{"_index":260,"title":{},"body":{"components/LoginComponent.html":{}}}],["15.2.0",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["15.2.2",{"_index":547,"title":{},"body":{"index.html":{}}}],["1px",{"_index":372,"title":{},"body":{"components/SingUpComponent.html":{}}}],["2",{"_index":600,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":602,"title":{},"body":{"overview.html":{}}}],["3vw",{"_index":266,"title":{},"body":{"components/LoginComponent.html":{}}}],["4",{"_index":603,"title":{},"body":{"overview.html":{}}}],["5.2.3",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":601,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["_activatedroute",{"_index":303,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_activatedroute:activatedroute,private",{"_index":320,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_auth",{"_index":350,"title":{},"body":{"components/SingUpComponent.html":{}}}],["_authservice",{"_index":209,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["_http",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["_router",{"_index":206,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{}}}],["_router:router",{"_index":359,"title":{},"body":{"components/SingUpComponent.html":{}}}],["_router:router,private",{"_index":322,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_todoservice",{"_index":300,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_todoservice:todoservice",{"_index":323,"title":{},"body":{"components/NavbarComponent.html":{}}}],["account",{"_index":370,"title":{},"body":{"components/SingUpComponent.html":{}}}],["activatedroute",{"_index":299,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{}}}],["activatedroutesnapshot",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["add",{"_index":419,"title":{},"body":{"components/TodoInputComponent.html":{},"index.html":{}}}],["addtodo",{"_index":388,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["addtodotouser",{"_index":469,"title":{},"body":{"injectables/TodoService.html":{}}}],["addtodotouser(userid",{"_index":474,"title":{},"body":{"injectables/TodoService.html":{}}}],["adduser",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["adduser(data",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["already",{"_index":369,"title":{},"body":{"components/SingUpComponent.html":{}}}],["angular",{"_index":544,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/MyInterceptorInterceptor.html":{}}}],["angular/compiler",{"_index":488,"title":{},"body":{"injectables/TodoService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/SingUpComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["app.component",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":556,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["appmodule",{"_index":59,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":67,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["artifacts",{"_index":567,"title":{},"body":{"index.html":{}}}],["auth",{"_index":240,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.guard",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authguard",{"_index":108,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":143,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"coverage.html":{}}}],["authservice,private",{"_index":321,"title":{},"body":{"components/NavbarComponent.html":{}}}],["automatically",{"_index":557,"title":{},"body":{"index.html":{}}}],["available",{"_index":599,"title":{},"body":{"modules.html":{}}}],["background",{"_index":261,"title":{},"body":{"components/LoginComponent.html":{},"components/TodoInputComponent.html":{}}}],["bi",{"_index":457,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["body",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["boolean",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{}}}],["bootstrap",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":264,"title":{},"body":{"components/LoginComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{}}}],["box",{"_index":424,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["browse",{"_index":597,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":566,"title":{},"body":{"index.html":{}}}],["buttonclicked",{"_index":466,"title":{},"body":{"injectables/TodoService.html":{}}}],["canactivate",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":586,"title":{},"body":{"index.html":{}}}],["case",{"_index":501,"title":{},"body":{"injectables/TodoService.html":{}}}],["change",{"_index":559,"title":{},"body":{"index.html":{}}}],["changestatus",{"_index":433,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["changestatus(id",{"_index":444,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["check",{"_index":591,"title":{},"body":{"index.html":{}}}],["choice",{"_index":581,"title":{},"body":{"index.html":{}}}],["class",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["cli",{"_index":545,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":561,"title":{},"body":{"index.html":{}}}],["color",{"_index":262,"title":{},"body":{"components/LoginComponent.html":{},"components/TodoInputComponent.html":{}}}],["command",{"_index":582,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"overview.html":{}}}],["components/login/login.component",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.component",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sing",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/todo",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["conditional",{"_index":487,"title":{},"body":{"injectables/TodoService.html":{}}}],["console.log(form.value",{"_index":363,"title":{},"body":{"components/SingUpComponent.html":{}}}],["console.log(json.stringify(user",{"_index":243,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(res.users",{"_index":365,"title":{},"body":{"components/SingUpComponent.html":{}}}],["console.log(this.mysingupform",{"_index":360,"title":{},"body":{"components/SingUpComponent.html":{}}}],["const",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/MyInterceptorInterceptor.html":{},"injectables/TodoService.html":{}}}],["constructor",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"injectables/TodoService.html":{}}}],["constructor(_activatedroute",{"_index":298,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(_authservice",{"_index":205,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(_http",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(_router",{"_index":349,"title":{},"body":{"components/SingUpComponent.html":{}}}],["constructor(activatedroute",{"_index":392,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["constructor(private",{"_index":223,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{}}}],["content",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["control",{"_index":421,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["control:focus",{"_index":423,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["control[readonly]:not([disabled",{"_index":428,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["convert",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["coverage",{"_index":509,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentid",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/TodoInputComponent.html":{},"injectables/TodoService.html":{}}}],["cursor",{"_index":341,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodoItemComponent.html":{}}}],["d0e3f982",{"_index":263,"title":{},"body":{"components/LoginComponent.html":{}}}],["data",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.todos",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":355,"title":{},"body":{"components/SingUpComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["deleted",{"_index":333,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/TodoService.html":{}}}],["deletednum",{"_index":292,"title":{},"body":{"components/NavbarComponent.html":{}}}],["deletetodo",{"_index":434,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["deletetodo(id",{"_index":446,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["dependencies",{"_index":61,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":553,"title":{},"body":{"index.html":{}}}],["development",{"_index":548,"title":{},"body":{"index.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["directives",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":565,"title":{},"body":{"index.html":{}}}],["directory",{"_index":570,"title":{},"body":{"index.html":{}}}],["dist",{"_index":569,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["donenum",{"_index":293,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dynamic",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":579,"title":{},"body":{"index.html":{}}}],["ease",{"_index":463,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["email",{"_index":366,"title":{},"body":{"components/SingUpComponent.html":{}}}],["empty",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":578,"title":{},"body":{"index.html":{}}}],["event",{"_index":397,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["eventemitter",{"_index":442,"title":{},"body":{"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["execute",{"_index":575,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{}}}],["exports",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["false",{"_index":218,"title":{},"body":{"components/LoginComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["fav",{"_index":331,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/TodoService.html":{}}}],["favnum",{"_index":294,"title":{},"body":{"components/NavbarComponent.html":{}}}],["favtodo",{"_index":435,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["favtodo(id",{"_index":448,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["fbfbfb",{"_index":429,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["files",{"_index":560,"title":{},"body":{"index.html":{}}}],["first",{"_index":584,"title":{},"body":{"index.html":{}}}],["form",{"_index":214,"title":{},"body":{"components/LoginComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{}}}],["form.reset",{"_index":230,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.value.username",{"_index":233,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":251,"title":{},"body":{"components/LoginComponent.html":{}}}],["full",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":587,"title":{},"body":{"index.html":{}}}],["generate",{"_index":563,"title":{},"body":{"index.html":{}}}],["generated",{"_index":543,"title":{},"body":{"index.html":{}}}],["getdeleted",{"_index":295,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getfav",{"_index":296,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getnewtodo",{"_index":389,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["getnewtodo(event",{"_index":395,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["getting",{"_index":539,"title":{"index.html":{}},"body":{}}],["gettodo",{"_index":436,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["gettodos",{"_index":390,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["gettodosforuser",{"_index":470,"title":{},"body":{"injectables/TodoService.html":{}}}],["gettodosforuser(userid",{"_index":476,"title":{},"body":{"injectables/TodoService.html":{}}}],["getuserinlocalstorage",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/TodoService.html":{}}}],["go",{"_index":590,"title":{},"body":{"index.html":{}}}],["graph",{"_index":598,"title":{},"body":{"modules.html":{}}}],["green",{"_index":375,"title":{},"body":{"components/SingUpComponent.html":{}}}],["guard",{"_index":120,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{}}}],["headers",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["height",{"_index":259,"title":{},"body":{"components/LoginComponent.html":{}}}],["help",{"_index":588,"title":{},"body":{"index.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["http",{"_index":239,"title":{},"body":{"components/LoginComponent.html":{}}}],["http://localhost:4200",{"_index":555,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpclientmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":278,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["httphandler",{"_index":276,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["httpheaders",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpinterceptor",{"_index":279,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["httprequest",{"_index":274,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["icons",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{}}}],["id:0",{"_index":440,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["identifier",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["if(!form.valid",{"_index":229,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(!localstorage.getitem('users",{"_index":247,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.deletednum()>=this.todos.length",{"_index":336,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.users.findindex(u",{"_index":231,"title":{},"body":{"components/LoginComponent.html":{}}}],["implements",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{}}}],["imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{}}}],["injectable",{"_index":138,"title":{"injectables/AuthService.html":{},"injectables/TodoService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/MyInterceptorInterceptor.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["injectables",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodoService.html":{},"overview.html":{}}}],["input",{"_index":385,"title":{},"body":{"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["input'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["input.component",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["input.component.css",{"_index":386,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.html",{"_index":387,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.ts",{"_index":384,"title":{},"body":{"components/TodoInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:13",{"_index":403,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.ts:15",{"_index":404,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.ts:16",{"_index":402,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.ts:17",{"_index":406,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.ts:18",{"_index":405,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.ts:19",{"_index":393,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.ts:31",{"_index":394,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.ts:38",{"_index":401,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.ts:42",{"_index":396,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.ts:48",{"_index":398,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.component.ts:51",{"_index":399,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input.form",{"_index":427,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["input/todo",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TodoInputComponent.html":{},"coverage.html":{}}}],["input/todolist.ts",{"_index":383,"title":{},"body":{"interfaces/Todo-1.html":{},"coverage.html":{}}}],["inputs",{"_index":437,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["intercept",{"_index":271,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["intercept(request",{"_index":273,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["interceptor",{"_index":267,"title":{"interceptors/MyInterceptorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.interceptor",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.interceptor.ts",{"_index":270,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{},"coverage.html":{}}}],["interceptor.interceptor.ts:11",{"_index":272,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["interceptor.interceptor.ts:15",{"_index":277,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["interceptors",{"_index":268,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["interface",{"_index":376,"title":{"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"interfaces/User.html":{}},"body":{"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":377,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"interfaces/User.html":{},"overview.html":{}}}],["invalid",{"_index":371,"title":{},"body":{"components/SingUpComponent.html":{}}}],["isdeleted",{"_index":379,"title":{},"body":{"interfaces/Todo.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["isfav",{"_index":380,"title":{},"body":{"interfaces/Todo.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["isuser",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["isuser(body",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["item.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":431,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["item.component.html",{"_index":432,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["item.component.ts",{"_index":430,"title":{},"body":{"components/TodoItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:11",{"_index":441,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["item.component.ts:18",{"_index":443,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["item.component.ts:22",{"_index":445,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["item.component.ts:26",{"_index":447,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["item.component.ts:31",{"_index":450,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["item.component.ts:34",{"_index":449,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["item/todo",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"components/TodoItemComponent.html":{},"coverage.html":{}}}],["json.parse(localstorage.getitem('users",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodoService.html":{}}}],["json.parse(users",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(usersarray",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":577,"title":{},"body":{"index.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["list1",{"_index":420,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["localstorage.getitem('users",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('users",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["log",{"_index":255,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/SingUpComponent.html":{}}}],["login'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["login.component.css",{"_index":200,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":201,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":42,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginuser",{"_index":203,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser(form",{"_index":211,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser(form:ngform",{"_index":226,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":297,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matching",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["math.floor((this.todos.filter(todo=>todo.status===true).length/(this.todos.length",{"_index":338,"title":{},"body":{"components/NavbarComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["methods",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["module",{"_index":58,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":60,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":589,"title":{},"body":{"index.html":{}}}],["multi",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["my_app",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["myapp",{"_index":541,"title":{},"body":{"index.html":{}}}],["myinterceptorinterceptor",{"_index":68,"title":{"interceptors/MyInterceptorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/MyInterceptorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["mysingupform",{"_index":347,"title":{},"body":{"components/SingUpComponent.html":{}}}],["mysingupform:ngmodel",{"_index":358,"title":{},"body":{"components/SingUpComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"index.html":{}}}],["navbar",{"_index":287,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["navbar.component.css",{"_index":288,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":289,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":44,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":554,"title":{},"body":{"index.html":{}}}],["need",{"_index":583,"title":{},"body":{"index.html":{}}}],["new",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":275,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["next.handle(req",{"_index":284,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["ng",{"_index":551,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":212,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngmodel",{"_index":354,"title":{},"body":{"components/SingUpComponent.html":{}}}],["ngmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":204,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{}}}],["none",{"_index":258,"title":{},"body":{"components/LoginComponent.html":{},"components/TodoInputComponent.html":{}}}],["notuser",{"_index":202,"title":{},"body":{"components/LoginComponent.html":{}}}],["null",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{}}}],["number(_activatedroute.snapshot.params['id",{"_index":325,"title":{},"body":{"components/NavbarComponent.html":{}}}],["number(this.activatedroute.snapshot.params['id",{"_index":408,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["observable",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/MyInterceptorInterceptor.html":{}}}],["oninit",{"_index":286,"title":{},"body":{"components/NavbarComponent.html":{}}}],["opacity",{"_index":459,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["optional",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["out",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"components/TodoItemComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":451,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["outputs",{"_index":438,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["overview",{"_index":592,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":524,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":594,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["password",{"_index":250,"title":{},"body":{"components/LoginComponent.html":{},"components/SingUpComponent.html":{},"interfaces/User.html":{}}}],["path",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["platform",{"_index":580,"title":{},"body":{"index.html":{}}}],["please",{"_index":252,"title":{},"body":{"components/LoginComponent.html":{}}}],["pointer",{"_index":342,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodoItemComponent.html":{}}}],["private",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"injectables/TodoService.html":{}}}],["project",{"_index":542,"title":{},"body":{"index.html":{}}}],["promise",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provide",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TodoService.html":{}}}],["providers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":467,"title":{},"body":{"injectables/TodoService.html":{}}}],["qoute",{"_index":368,"title":{},"body":{"components/SingUpComponent.html":{},"interfaces/User.html":{}}}],["radius",{"_index":265,"title":{},"body":{"components/LoginComponent.html":{}}}],["random",{"_index":312,"title":{},"body":{"components/NavbarComponent.html":{}}}],["red",{"_index":374,"title":{},"body":{"components/SingUpComponent.html":{}}}],["redirectto",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":593,"title":{},"body":{"index.html":{}}}],["reload",{"_index":558,"title":{},"body":{"index.html":{}}}],["req",{"_index":280,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["request",{"_index":241,"title":{},"body":{"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{}}}],["request.clone({headers",{"_index":281,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["request.headers.set('name",{"_index":282,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["required",{"_index":249,"title":{},"body":{"components/LoginComponent.html":{},"components/SingUpComponent.html":{}}}],["reset",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resize",{"_index":257,"title":{},"body":{"components/LoginComponent.html":{}}}],["results",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["return",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"injectables/TodoService.html":{}}}],["returns",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["returntodo",{"_index":439,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/TodoService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["route",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":207,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{}}}],["routermodule",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":106,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":550,"title":{},"body":{"index.html":{}}}],["running",{"_index":571,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/MyInterceptorInterceptor.html":{},"dependencies.html":{}}}],["salah",{"_index":283,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{}}}],["scaffolding",{"_index":562,"title":{},"body":{"index.html":{}}}],["select",{"_index":426,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["serve",{"_index":552,"title":{},"body":{"index.html":{}}}],["server",{"_index":549,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":222,"title":{},"body":{"components/LoginComponent.html":{}}}],["services/todointerface",{"_index":407,"title":{},"body":{"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["shadow",{"_index":425,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["showcondition",{"_index":468,"title":{},"body":{"injectables/TodoService.html":{}}}],["sign",{"_index":253,"title":{},"body":{"components/LoginComponent.html":{},"components/SingUpComponent.html":{}}}],["signup",{"_index":116,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["sing",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["singupcomponent",{"_index":46,"title":{"components/SingUpComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["solid",{"_index":373,"title":{},"body":{"components/SingUpComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{},"index.html":{}}}],["src/app/app",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:10",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/components/login/login.component.ts",{"_index":199,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:12",{"_index":220,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:13",{"_index":219,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:14",{"_index":217,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:15",{"_index":208,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":213,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:40",{"_index":210,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:45",{"_index":216,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:49",{"_index":215,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":285,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:15",{"_index":316,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:16",{"_index":315,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:17",{"_index":314,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":313,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:19",{"_index":302,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:23",{"_index":311,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:26",{"_index":309,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:34",{"_index":308,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:39",{"_index":307,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:44",{"_index":306,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:50",{"_index":304,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:54",{"_index":305,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:61",{"_index":310,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/sing",{"_index":343,"title":{},"body":{"components/SingUpComponent.html":{},"coverage.html":{}}}],["src/app/components/todo",{"_index":382,"title":{},"body":{"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"coverage.html":{}}}],["src/app/my",{"_index":269,"title":{},"body":{"interceptors/MyInterceptorInterceptor.html":{},"coverage.html":{}}}],["src/app/services/auth.service",{"_index":317,"title":{},"body":{"components/NavbarComponent.html":{},"components/SingUpComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:11",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:14",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:18",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:33",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/todo.service",{"_index":318,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{}}}],["src/app/services/todo.service.ts",{"_index":465,"title":{},"body":{"injectables/TodoService.html":{},"coverage.html":{}}}],["src/app/services/todo.service.ts:10",{"_index":483,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:11",{"_index":485,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:12",{"_index":484,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:13",{"_index":473,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:19",{"_index":475,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:36",{"_index":480,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:46",{"_index":477,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:60",{"_index":478,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:63",{"_index":482,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todointerface",{"_index":319,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/services/todointerface.ts",{"_index":378,"title":{},"body":{"interfaces/Todo.html":{},"coverage.html":{}}}],["src/app/services/userinterface",{"_index":221,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["src/app/services/userinterface.ts",{"_index":508,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["star",{"_index":458,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["star.active",{"_index":464,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["started",{"_index":540,"title":{"index.html":{}},"body":{}}],["state",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":381,"title":{},"body":{"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["stored",{"_index":568,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["submitform",{"_index":348,"title":{},"body":{"components/SingUpComponent.html":{}}}],["submitform(form",{"_index":352,"title":{},"body":{"components/SingUpComponent.html":{}}}],["support",{"_index":595,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":596,"title":{},"body":{"modules.html":{}}}],["switch(this.showcondition",{"_index":500,"title":{},"body":{"injectables/TodoService.html":{}}}],["t.id",{"_index":496,"title":{},"body":{"injectables/TodoService.html":{}}}],["t.isdeleted===true",{"_index":504,"title":{},"body":{"injectables/TodoService.html":{}}}],["t.isfav===true",{"_index":503,"title":{},"body":{"injectables/TodoService.html":{}}}],["table",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["test",{"_index":574,"title":{},"body":{"index.html":{}}}],["testing",{"_index":585,"title":{},"body":{"index.html":{}}}],["tests",{"_index":573,"title":{},"body":{"index.html":{}}}],["textarea",{"_index":256,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._auth.adduser(form.value",{"_index":362,"title":{},"body":{"components/SingUpComponent.html":{}}}],["this._auth.getusers().subscribe((res:any",{"_index":364,"title":{},"body":{"components/SingUpComponent.html":{}}}],["this._authservice.adduser(form.value).subscribe((user",{"_index":242,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._authservice.getuserinlocalstorage",{"_index":225,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this._http.get('https://dummyjson.com/users?skip=50&limit=50",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._http.post('https://dummyjson.com/auth/login",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._http.post('https://dummyjson.com/users/add",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._router.navigate(['../login",{"_index":361,"title":{},"body":{"components/SingUpComponent.html":{}}}],["this._router.navigate(['/login",{"_index":340,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._router.navigate(['/signup",{"_index":246,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._router.navigate(['/todos',this.user.id",{"_index":237,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._todoservice.buttonclicked.emit",{"_index":332,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._todoservice.showcondition",{"_index":330,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.currentid",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/TodoService.html":{}}}],["this.deletednum()))*100",{"_index":339,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.gettodos",{"_index":410,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["this.gettodosforuser(user.id",{"_index":491,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.getusers",{"_index":227,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/TodoService.html":{}}}],["this.notuser",{"_index":238,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.returntodo.emit(this.todo",{"_index":455,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["this.title",{"_index":412,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["this.todo.isdeleted",{"_index":453,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["this.todo.isfav",{"_index":454,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["this.todo.status",{"_index":452,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["this.todos",{"_index":328,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{}}}],["this.todos.filter(todo=>todo.isdeleted===true).length",{"_index":335,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.todos.filter(todo=>todo.isfav===true).length",{"_index":334,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.todos.length==0",{"_index":337,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.todoservice.addtodotouser(this.userid",{"_index":411,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["this.todoservice.buttonclicked.emit",{"_index":416,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["this.todoservice.buttonclicked.subscribe",{"_index":409,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["this.todoservice.gettodosforuser(this.userid",{"_index":417,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["this.todoservice.showcondition",{"_index":413,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["this.todoservice.updatetodoinuser(this.userid",{"_index":414,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["this.updatetodos(event",{"_index":415,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["this.updateuser(user",{"_index":493,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.user",{"_index":234,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["this.user.id",{"_index":228,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user.todos",{"_index":329,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userid",{"_index":324,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{}}}],["this.users",{"_index":224,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/TodoService.html":{}}}],["this.users.find((u",{"_index":489,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.users.find((user",{"_index":326,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.users.findindex((u",{"_index":507,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.users.length",{"_index":244,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.users[this.users.findindex(user",{"_index":235,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.users[this.users.length",{"_index":245,"title":{},"body":{"components/LoginComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["todo",{"_index":50,"title":{"interfaces/Todo.html":{},"interfaces/Todo-1.html":{}},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["todo.id",{"_index":497,"title":{},"body":{"injectables/TodoService.html":{}}}],["todo.title",{"_index":456,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["todoindex",{"_index":494,"title":{},"body":{"injectables/TodoService.html":{}}}],["todoinputcomponent",{"_index":49,"title":{"components/TodoInputComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todointerface",{"_index":486,"title":{},"body":{"injectables/TodoService.html":{},"interfaces/User.html":{}}}],["todoitemcomponent",{"_index":52,"title":{"components/TodoItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todos",{"_index":290,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{},"interfaces/User.html":{}}}],["todos/:id",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["todoservice",{"_index":301,"title":{"injectables/TodoService.html":{}},"body":{"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["transition",{"_index":461,"title":{},"body":{"components/TodoItemComponent.html":{}}}],["transparent",{"_index":422,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["true",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/TodoItemComponent.html":{}}}],["tslib",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interceptors/MyInterceptorInterceptor.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"interfaces/Todo.html":{},"interfaces/Todo-1.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["u.id",{"_index":490,"title":{},"body":{"injectables/TodoService.html":{}}}],["u.username",{"_index":232,"title":{},"body":{"components/LoginComponent.html":{}}}],["undefined",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"components/SingUpComponent.html":{}}}],["unit",{"_index":572,"title":{},"body":{"index.html":{}}}],["up",{"_index":254,"title":{},"body":{"components/LoginComponent.html":{},"components/SingUpComponent.html":{}}}],["up'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["up.component",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["up.component.css",{"_index":345,"title":{},"body":{"components/SingUpComponent.html":{}}}],["up.component.html",{"_index":346,"title":{},"body":{"components/SingUpComponent.html":{}}}],["up.component.ts",{"_index":344,"title":{},"body":{"components/SingUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:12",{"_index":351,"title":{},"body":{"components/SingUpComponent.html":{}}}],["up.component.ts:17",{"_index":353,"title":{},"body":{"components/SingUpComponent.html":{}}}],["up/sing",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SingUpComponent.html":{},"coverage.html":{}}}],["updatetodoinuser",{"_index":471,"title":{},"body":{"injectables/TodoService.html":{}}}],["updatetodoinuser(userid",{"_index":479,"title":{},"body":{"injectables/TodoService.html":{}}}],["updatetodos",{"_index":391,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["updatetodos(todo",{"_index":400,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["updateuser",{"_index":472,"title":{},"body":{"injectables/TodoService.html":{}}}],["updateuser(user",{"_index":481,"title":{},"body":{"injectables/TodoService.html":{}}}],["urltree",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":564,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":157,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user.id",{"_index":327,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/TodoService.html":{}}}],["user.qoute",{"_index":418,"title":{},"body":{"components/TodoInputComponent.html":{}}}],["user.todos.filter(t",{"_index":502,"title":{},"body":{"injectables/TodoService.html":{}}}],["user.todos.filter(todo=>!todo.isdeleted===true",{"_index":505,"title":{},"body":{"injectables/TodoService.html":{}}}],["user.todos.findindex((t",{"_index":495,"title":{},"body":{"injectables/TodoService.html":{}}}],["user.todos.length",{"_index":499,"title":{},"body":{"injectables/TodoService.html":{}}}],["user.todos.push(todo",{"_index":492,"title":{},"body":{"injectables/TodoService.html":{}}}],["user.username",{"_index":236,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{}}}],["user?.todos",{"_index":498,"title":{},"body":{"injectables/TodoService.html":{}}}],["userid",{"_index":291,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{},"injectables/TodoService.html":{}}}],["userindex",{"_index":506,"title":{},"body":{"injectables/TodoService.html":{}}}],["userinterface",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodoService.html":{}}}],["username",{"_index":248,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["users",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{},"injectables/TodoService.html":{}}}],["usersarray",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersarray.length",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersarray.push(data",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersarray[usersarray.length",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["valid",{"_index":367,"title":{},"body":{"components/SingUpComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{}}}],["version",{"_index":546,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":576,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":357,"title":{},"body":{"components/SingUpComponent.html":{}}}],["viewchild('form",{"_index":356,"title":{},"body":{"components/SingUpComponent.html":{}}}],["void",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SingUpComponent.html":{},"components/TodoInputComponent.html":{},"components/TodoItemComponent.html":{},"injectables/TodoService.html":{}}}],["zone.js",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'my_app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my_app';\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SingUpComponent', 'selector': 'app-sing-up'},{'name': 'TodoInputComponent', 'selector': 'app-todo-input'},{'name': 'TodoItemComponent', 'selector': 'app-todo-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nSingUpComponent\n\nSingUpComponent\n\nAppModule -->\n\nSingUpComponent->AppModule\n\n\n\n\n\nTodoInputComponent\n\nTodoInputComponent\n\nAppModule -->\n\nTodoInputComponent->AppModule\n\n\n\n\n\nTodoItemComponent\n\nTodoItemComponent\n\nAppModule -->\n\nTodoItemComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMyInterceptorInterceptor\n\nMyInterceptorInterceptor\n\nAppModule -->\n\nMyInterceptorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            SingUpComponent\n                        \n                        \n                            TodoInputComponent\n                        \n                        \n                            TodoItemComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            MyInterceptorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoInputComponent } from './components/todo-input/todo-input.component';\nimport { FormsModule } from '@angular/forms';\nimport { LoginComponent } from './components/login/login.component';\nimport { TodoItemComponent } from './components/todo-item/todo-item.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { SingUpComponent } from './components/sing-up/sing-up.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MyInterceptorInterceptor } from './my-interceptor.interceptor';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoInputComponent,\n    LoginComponent,\n    TodoItemComponent,\n    NavbarComponent,\n    SingUpComponent,\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: MyInterceptorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { LoginComponent } from './components/login/login.component';\nimport { SingUpComponent } from './components/sing-up/sing-up.component';\nimport { TodoInputComponent } from './components/todo-input/todo-input.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'login' ,pathMatch: 'full'},\n  {path: 'login', component: LoginComponent},\n  {path: 'signUp', component: SingUpComponent},\n  {path: 'todos/:id' , component : TodoInputComponent},\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n    return true;\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                getUserInLocalStorage\n                            \n                            \n                                getUsers\n                            \n                            \n                                isUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(data: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInLocalStorage\n                        \n                    \n                \n            \n            \n                \ngetUserInLocalStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n            \n                \nisUser(body: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n//import User from './userInterface';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport User from './userInterface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  currentId : number = 0 ;\n\n  constructor( private _http : HttpClient) { }\n  getUsers() {\n    \n    return this._http.get('https://dummyjson.com/users?skip=50&limit=50');\n   }\n   getUserInLocalStorage() {\n    return JSON.parse(localStorage.getItem('users') as string) || []; \n   }\n   addUser(data : User) {\n    let users = localStorage.getItem('users');\n    let usersArray :User[] = users ? JSON.parse(users) : []; // convert to array or create an empty array if null or undefined\n    this.currentId = usersArray.length === 0 ? 1 : usersArray[usersArray.length -1 ].id +1;\n    data.todos = [];\n    data.id =  this.currentId;\n    usersArray.push(data);\n    localStorage.setItem('users', JSON.stringify(usersArray)); \n    // const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    // return this._http.post('https://dummyjson.com/users/add' , data ,{headers} )\n   }\n\n   isUser(body : any) {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this._http.post('https://dummyjson.com/auth/login' , body , {headers})\n   }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentId\n                            \n                            \n                                notUser\n                            \n                            \n                                user\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_AuthService: AuthService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _AuthService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport User from 'src/app/services/userInterface';\nimport { AuthService } from '../../services/auth.service'\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  users : User[] = [];\n  user : User = {} as User\n  currentId : number = 0;\n  notUser : boolean = false;\n  constructor(private _AuthService : AuthService ,private _router : Router){\n    \n    this.users  = this._AuthService.getUserInLocalStorage();\n  }\n  loginUser(form:NgForm) : void{\n    this.getUsers();\n    // this.user.id = this.currentId;\n    if(!form.valid){\n      form.reset();\n      return;\n    }\n    if(this.users.findIndex(u => u.username == form.value.username)!==-1){\n      this.user = this.users[this.users.findIndex(user => user.username == form.value.username)];\n      this._router.navigate(['/todos',this.user.id]);\n      return;  \n    }else{\n      this.notUser =true\n    }\n    \n    //http auth request\n   //this._AuthService.addUser(form.value).subscribe((user : any) => {console.log(JSON.stringify(user));\n     //})\n    //this._router.navigate(['/todos',this.user.id]);\n  }\n  getUsers() : void{\n    this.users  = this._AuthService.getUserInLocalStorage();\n    this.currentId = this.users.length === 0 ? 1 :this.users[this.users.length -1 ].id +1;\n  }\n\n  signUp() {\n    this._router.navigate(['/signup']);\n  }\n\n  ngOnInit() : void {\n    if(!localStorage.getItem('users')){\n      localStorage.setItem('users' , '[]');\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      Username\n      \n        Username is\n          required\n    \n\n    \n    \n      Password\n      \n        Password is\n          required\n    \n    \n      User not Found please sign up\n    \n\n    \n    \n      Sign Up\n    \n    \n      Log in\n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                textarea{\n    resize: none;\n    height: 10vw;\n}\nform{\n    background-color: #d0e3f982;\n    border-radius: 3vw;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Username              Username is          required                  Password              Password is          required              User not Found please sign up                  Sign Up              Log in      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SingUpComponent', 'selector': 'app-sing-up'},{'name': 'TodoInputComponent', 'selector': 'app-todo-input'},{'name': 'TodoItemComponent', 'selector': 'app-todo-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/MyInterceptorInterceptor.html":{"url":"interceptors/MyInterceptorInterceptor.html","title":"interceptor - MyInterceptorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  MyInterceptorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/my-interceptor.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/my-interceptor.interceptor.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/my-interceptor.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class MyInterceptorInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    const req = request.clone({headers : request.headers.set('name', 'salah')});\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                todos\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletedNum\n                            \n                            \n                                doneNum\n                            \n                            \n                                favNum\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getfav\n                            \n                            \n                                getUsers\n                            \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_activatedRoute: ActivatedRoute, _authService: AuthService, _router: Router, _todoService: TodoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _todoService\n                                                  \n                                                        \n                                                                        TodoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deletedNum\n                        \n                    \n                \n            \n            \n                \ndeletedNum()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doneNum\n                        \n                    \n                \n            \n            \n                \ndoneNum()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favNum\n                        \n                    \n                \n            \n            \n                \nfavNum()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getfav\n                        \n                    \n                \n            \n            \n                \ngetfav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'random'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { TodoService } from 'src/app/services/todo.service';\nimport Todo from 'src/app/services/todoInterface';\nimport User from 'src/app/services/userInterface';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  users : User[]=[];\n  userId: number =0;\n  todos : Todo[]=[];\n  name : string = 'random';\n  user : User ={} as User;\n  constructor(private _activatedRoute:ActivatedRoute,private _authService: AuthService,private _router:Router,private _todoService:TodoService) {\n    this.userId = Number(_activatedRoute.snapshot.params['id']);\n  }\n  ngOnInit(): void {\n    this.getUsers()\n  }\n  getUsers() {\n    this.users = this._authService.getUserInLocalStorage();\n    this.user = this.users.find((user) => user.id === this.userId)!\n    this.todos= this.user.todos;\n    \n    \n  }\n\n  getfav(){\n    this._todoService.showCondition = \"Fav\";\n    this._todoService.buttonClicked.emit();\n  }\n\n  getDeleted(){\n    this._todoService.showCondition = \"Deleted\";\n    this._todoService.buttonClicked.emit();\n  }\n\n  favNum(){\n    this.getUsers()\n    return this.todos.filter(todo=>todo.isFav===true).length;\n\n  }\n\n  deletedNum(){\n    this.getUsers()\n    return this.todos.filter(todo=>todo.isDeleted===true).length;\n  }\n  doneNum(){\n    this.getUsers()\n    if(this.deletedNum()>=this.todos.length || this.todos.length==0)\n      return 0;\n    return Math.floor((this.todos.filter(todo=>todo.status===true).length/(this.todos.length-this.deletedNum()))*100);\n  }\n\n  logOut(){ \n    this._router.navigate(['/login']);\n    }\n\n}\n\n    \n\n    \n        \n    \n      \n     \n      \n        \n      \n    \n      \n        \n            \n                {{user.username}}\n              \n              \n                \n                {{favNum()}}\n              \n              \n              \n                \n                {{deletedNum()}}\n              \n\n\n              \n                \n                {{doneNum()}}%\n              \n\n        \n        \n            Logout\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .cursor{\n    cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                 {{user.username}}                                                            {{favNum()}}                                                                          {{deletedNum()}}                                                            {{doneNum()}}%                                          Logout                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SingUpComponent', 'selector': 'app-sing-up'},{'name': 'TodoInputComponent', 'selector': 'app-todo-input'},{'name': 'TodoItemComponent', 'selector': 'app-todo-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SingUpComponent.html":{"url":"components/SingUpComponent.html","title":"component - SingUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SingUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sing-up/sing-up.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sing-up\n            \n\n            \n                styleUrls\n                ./sing-up.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sing-up.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mySingUpForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sing-up/sing-up.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm(form: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sing-up/sing-up.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mySingUpForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgModel | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('form')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/sing-up/sing-up.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n@Component({\n  selector: 'app-sing-up',\n  templateUrl: './sing-up.component.html',\n  styleUrls: ['./sing-up.component.css']\n})\n\nexport class SingUpComponent {\n  @ViewChild('form') mySingUpForm:NgModel | undefined;\n\n  constructor(private _router:Router , private _auth: AuthService){\n\n  }\n  submitForm(form : any){\n    // console.log(this.mySingUpForm);\n    this._router.navigate(['../login']);\n    this._auth.addUser(form.value);\n    // console.log(form.value);\n    // this._auth.getUsers().subscribe((res:any)=>{\n    //   console.log(res.users);\n    // });\n\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              \n                \n  \n                  Sign up\n  \n                  \n  \n                    \n                      \n                      \n                        \n                            \n                                The User Name is Required\n                            \n                      \n                    \n  \n                    \n                      \n                      \n                        \n                        The Email is Required\n                        The Email is Not Valid\n                      \n                    \n  \n                    \n                      \n                      \n                        \n                        \n                                The Password is Required\n                            \n                      \n                    \n                    \n                      \n                      \n                        \n                        \n                                The qoute is Required\n                            \n                      \n                    \n                    \n                      \n                        If you already have an Account   Login\n                      \n                    \n  \n                    \n                      \n                    \n  \n                  \n  \n                \n                \n  \n                  \n  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./sing-up.component.css\n                \n                .invalid{\n    border: 1px solid red;\n}\n.valid{\n    border: 1px solid green;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          Sign up                                                                                                                                                                          The User Name is Required                                                                                                                                                                                        The Email is Required                        The Email is Not Valid                                                                                                                                                                                            The Password is Required                                                                                                                                                                                                                      The qoute is Required                                                                                                                                        If you already have an Account   Login                                                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SingUpComponent', 'selector': 'app-sing-up'},{'name': 'TodoInputComponent', 'selector': 'app-todo-input'},{'name': 'TodoItemComponent', 'selector': 'app-todo-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SingUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/todoInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isDeleted\n                                        \n                                \n                                \n                                        \n                                            isFav\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDeleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDeleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFav\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFav:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface Todo {\n  id : number;\n  title : string;\n  status : boolean;\n  isFav : boolean;\n  isDeleted : boolean\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo-1.html":{"url":"interfaces/Todo-1.html","title":"interface - Todo-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/todo-input/todolist.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface Todo {\n  id: number,\n  title: string,\n  status: boolean\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoInputComponent.html":{"url":"components/TodoInputComponent.html","title":"component - TodoInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodoInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/todo-input/todo-input.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-input\n            \n\n            \n                styleUrls\n                ./todo-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentId\n                            \n                            \n                                title\n                            \n                            \n                                todos\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                getNewTodo\n                            \n                            \n                                    Private\n                                getTodos\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateTodos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, todoService: TodoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/todo-input/todo-input.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        todoService\n                                                  \n                                                        \n                                                                        TodoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodo\n                        \n                    \n                \n            \n            \n                \naddTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo-input/todo-input.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewTodo\n                        \n                    \n                \n            \n            \n                \ngetNewTodo(event: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo-input/todo-input.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTodos\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTodos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo-input/todo-input.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo-input/todo-input.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTodos\n                        \n                    \n                \n            \n            \n                \nupdateTodos(todo: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo-input/todo-input.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo-input/todo-input.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo-input/todo-input.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo-input/todo-input.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : { } as User\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo-input/todo-input.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo-input/todo-input.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/todo-input/todo-input.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TodoService } from 'src/app/services/todo.service';\nimport User from 'src/app/services/userInterface';\nimport  Todo  from '../../services/todoInterface';\n\n@Component({\n  selector: 'app-todo-input',\n  templateUrl: './todo-input.component.html',\n  styleUrls: ['./todo-input.component.css']\n})\nexport class TodoInputComponent {\n  title = '';\n  // todo: Todo = {} as Todo;\n  todos: Todo[] = [];\n  currentId = 0;\n  users: User[] = [];\n  user: User = { } as User;\n  userId = 0;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private todoService: TodoService\n  ) {\n    this.userId = Number(this.activatedRoute.snapshot.params['id']);\n    this.todoService.buttonClicked.subscribe(()=>{\n      this.getTodos();\n    })\n  }\n\n  addTodo(): void {\n    this.todoService.addTodoToUser(this.userId, this.title);\n    this.todoService.showCondition='';\n    this.getTodos();\n    this.title = '';\n  }\n\n  updateTodos(todo: Todo): void {\n    this.todoService.updateTodoInUser(this.userId, todo);\n  }\n\n  getNewTodo(event : Todo) : void {\n    this.updateTodos(event)\n    this.todoService.showCondition='';\n    this.todoService.buttonClicked.emit();\n  }\n  \n  private getTodos(): void {\n    this.todos = this.todoService.getTodosForUser(this.userId);\n  }\n ngOnInit() {\n  this.getTodos();\n }\n}\n\n    \n\n    \n        \n\n\n  {{user.username}}\n            {{user.qoute}}\n\n\n\n  \n    \n      \n        \n          \n\n            \n              \n              Todo App\n            \n            \n            \n              \n                \n                  \n                    \n                    \n                    \n                      Add\n                    \n                  \n                \n              \n            \n\n            \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./todo-input.component.css\n                \n                #list1 .form-control {\n  border-color: transparent;\n}\n#list1 .form-control:focus {\n  border-color: transparent;\n  box-shadow: none;\n}\n#list1 .select-input.form-control[readonly]:not([disabled]) {\n  background-color: #fbfbfb;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{user.username}}            {{user.qoute}}                                                                      Todo App                                                                                                                                                                      Add                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SingUpComponent', 'selector': 'app-sing-up'},{'name': 'TodoInputComponent', 'selector': 'app-todo-input'},{'name': 'TodoItemComponent', 'selector': 'app-todo-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoItemComponent.html":{"url":"components/TodoItemComponent.html","title":"component - TodoItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodoItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/todo-item/todo-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo-item\n            \n\n            \n                styleUrls\n                ./todo-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./todo-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStatus\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                favTodo\n                            \n                            \n                                getTodo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                todo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                returnTodo\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        todo\n                    \n                \n                \n                    \n                        Type :         Todo\n\n                    \n                \n                \n                    \n                        Default value : {\n    id:0,\n    title : '',\n    status : false,\n    isFav : false,\n    isDeleted : false\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/todo-item/todo-item.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        returnTodo\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/todo-item/todo-item.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStatus\n                        \n                    \n                \n            \n            \n                \nchangeStatus(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo-item/todo-item.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodo\n                        \n                    \n                \n            \n            \n                \ndeleteTodo(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo-item/todo-item.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        favTodo\n                        \n                    \n                \n            \n            \n                \nfavTodo(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo-item/todo-item.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodo\n                        \n                    \n                \n            \n            \n                \ngetTodo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/todo-item/todo-item.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component ,Input , EventEmitter, Output} from '@angular/core';\nimport User from 'src/app/services/userInterface';\nimport Todo from '../../services/todoInterface';\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.css']\n})\nexport class TodoItemComponent {\n  @Input() todo : Todo  = {\n    id:0,\n    title : '',\n    status : false,\n    isFav : false,\n    isDeleted : false\n  };\n  @Output() returnTodo = new EventEmitter();\n\n\n\n  changeStatus(id : number): void {\n    this.todo.status = !this.todo.status;\n   }\n  \n   deleteTodo(id : number){\n    this.todo.status = false;\n    this.todo.isDeleted = true;\n    this.todo.isFav= false;\n   }\n   getTodo() {\n    this.returnTodo.emit(this.todo)\n   }\n   favTodo(id : number){\n\n    this.todo.isFav =!this.todo.isFav;\n   }\n}\n\n    \n\n    \n        \n    \n      \n        \n      \n    \n    \n      {{todo.title}}\n    \n     \n      \n        \n          \n        \n        \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./todo-item.component.css\n                \n                .bi-star {\n    opacity: 0.5;\n    transition: opacity 0.2s ease-in-out;\n    cursor: pointer;\n    \n  }\n  \n.bi-star.active {\n    opacity: 1;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{todo.title}}                                                                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SingUpComponent', 'selector': 'app-sing-up'},{'name': 'TodoInputComponent', 'selector': 'app-todo-input'},{'name': 'TodoItemComponent', 'selector': 'app-todo-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoService.html":{"url":"injectables/TodoService.html","title":"injectable - TodoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/todo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                            \n                                    Private\n                                currentId\n                            \n                            \n                                    Public\n                                showCondition\n                            \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodoToUser\n                            \n                            \n                                getTodosForUser\n                            \n                            \n                                    Private\n                                getUsers\n                            \n                            \n                                updateTodoInUser\n                            \n                            \n                                    Private\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/todo.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodoToUser\n                        \n                    \n                \n            \n            \n                \naddTodoToUser(userId: number, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTodosForUser\n                        \n                    \n                \n            \n            \n                \ngetTodosForUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Todo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTodoInUser\n                        \n                    \n                \n            \n            \n                \nupdateTodoInUser(userId: number, todo: Todo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    todo\n                                    \n                                                Todo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/todo.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClicked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/todo.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/todo.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showCondition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/todo.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/todo.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable ,EventEmitter} from '@angular/core';\nimport User from './userInterface';\nimport Todo from './todoInterface';\nimport { Conditional } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  private currentId = 0;\n  private users: User[] = [];\n  public showCondition :string=\"\"; \n  buttonClicked =new EventEmitter();\n\n  constructor() {\n    \n  }\n\n  addTodoToUser(userId: number, title: string): void {\n    if (!title) return;\n    this.getUsers();\n    const user = this.users.find((u) => u.id === userId);\n    if (!user) return;\n    this.getTodosForUser(user.id)\n    const todo: Todo = {\n      id: this.currentId,\n      title,\n      status: false,\n      isFav: false,\n      isDeleted: false,\n    };\n    user.todos.push(todo);\n    this.updateUser(user);\n  }\n\n  updateTodoInUser(userId: number, todo: Todo): void {\n    this.getUsers();\n    const user = this.users.find((u) => u.id === userId);\n    if (!user) return;\n    const todoIndex = user.todos.findIndex((t) => t.id === todo.id);\n    if (todoIndex  u.id === userId);\n    this.currentId = user?.todos ? user.todos.length +1 : 1;\n    switch(this.showCondition){\n      case 'Fav':\n      return user ? user.todos.filter(t => t.isFav===true):[];\n      case 'Deleted':\n        return user? user.todos.filter(t => t.isDeleted===true):[];\n      default :\n        return user ? user.todos.filter(todo=>!todo.isDeleted===true) : [];\n\n    }\n  }\n  private getUsers(): void {\n    this.users = JSON.parse(localStorage.getItem('users') || '[]');\n  }\n  private updateUser(user: User): void {\n    this.getUsers();\n    const userIndex = this.users.findIndex((u) => u.id === user.id);\n    if (userIndex \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/userInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            qoute\n                                        \n                                \n                                \n                                        \n                                            todos\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        qoute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qoute:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        todos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        todos:     Todo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Todo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import Todo from \"./todoInterface\";\nexport default interface User {\n  id : number;\n  username : string;\n  password: string;\n  qoute : string;\n  todos : Todo[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/sing-up/sing-up.component.ts\n            \n            component\n            SingUpComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/todo-input/todo-input.component.ts\n            \n            component\n            TodoInputComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/todo-input/todolist.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/todo-item/todo-item.component.ts\n            \n            component\n            TodoItemComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/my-interceptor.interceptor.ts\n            \n            interceptor\n            MyInterceptorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/todo.service.ts\n            \n            injectable\n            TodoService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/todoInterface.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/userInterface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            bootstrap : ^5.2.3\n        \n            bootstrap-icons : ^1.10.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyApp\nThis project was generated with Angular CLI version 15.2.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nSingUpComponent\n\nSingUpComponent\n\nAppModule -->\n\nSingUpComponent->AppModule\n\n\n\n\n\nTodoInputComponent\n\nTodoInputComponent\n\nAppModule -->\n\nTodoInputComponent->AppModule\n\n\n\n\n\nTodoItemComponent\n\nTodoItemComponent\n\nAppModule -->\n\nTodoItemComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMyInterceptorInterceptor\n\nMyInterceptorInterceptor\n\nAppModule -->\n\nMyInterceptorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
